# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Light_SweepExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Light_SweepExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.LightSweep"

def getLabel():
    return "Light_Sweep"

def getVersion():
    return 1

def getIconPath():
    return "lighsweep_icon.png"

def getGrouping():
    return "Community/Filter"

def getPluginDescription():
    return "Creates Light Sweep"

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.control = lastNode.createPageParam("control", "control")
    param = lastNode.createChoiceParam("Merge1operation", "Blend Mode")
    param.setDefaultValue(29)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("Blend Mode preferred OVERLAY for light and MULTIPLY for darken")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Merge1operation = param
    del param

    param = lastNode.createDouble2DParam("MouseposXY", "Mouse Position")
    param.setMinimum(-1.79769e+308, 0)
    param.setMaximum(1.79769e+308, 0)
    param.setDisplayMinimum(-1.79769e+308, 0)
    param.setDisplayMaximum(1.79769e+308, 0)
    param.setMinimum(-1.79769e+308, 1)
    param.setMaximum(1.79769e+308, 1)
    param.setDisplayMinimum(-1.79769e+308, 1)
    param.setDisplayMaximum(1.79769e+308, 1)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.MouseposXY = param
    
    param.setUsePointInteract(True)
    
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat0", "Scale")
    param.setMinimum(0, 0)
    param.setMaximum(99.99999999999999, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(99.99999999999999, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(8.1, 0)
    lastNode.Shadertoy1paramValueFloat0 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat1", "Rotation")
    param.setMinimum(0, 0)
    param.setMaximum(359.9999999999999, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(359.9999999999999, 0)
    param.setDefaultValue(44.99999999999999, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(22, 0)
    lastNode.Shadertoy1paramValueFloat1 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat2", "Evolution")
    param.setMinimum(1, 0)
    param.setMaximum(359.9999999999999, 0)
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(359.9999999999999, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat2 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat4", "Scale X")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat4 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat5", "Dual Light")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat5 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat6", "Thresold")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat6 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat7", "Hardness")
    param.setMinimum(0.09999999999999999, 0)
    param.setMaximum(49.99999999999999, 0)
    param.setDisplayMinimum(0.09999999999999999, 0)
    param.setDisplayMaximum(49.99999999999999, 0)
    param.setDefaultValue(4, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat7 = param
    del param

    param = lastNode.createIntParam("Shadertoy1paramValueInt8", "Anisotropic Count")
    param.setMinimum(0, 0)
    param.setMaximum(100, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueInt8 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat9", "Anisotropic depth")
    param.setMinimum(-1.5, 0)
    param.setMaximum(1.5, 0)
    param.setDisplayMinimum(-1.5, 0)
    param.setDisplayMaximum(1.5, 0)
    param.setDefaultValue(0.2, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat9 = param
    del param

    param = lastNode.createColorParam("Shadertoy1paramValueVec310", "Color", False)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)
    param.setDefaultValue(1, 2)
    param.restoreDefaultValue(2)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueVec310 = param
    del param

    lastNode.credit = lastNode.createPageParam("credit", "credit")
    param = lastNode.createStringParam("name", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("Light Sweep")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.credit.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.name = param
    del param

    param = lastNode.createStringParam("dev", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("Developed by")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.credit.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.dev = param
    del param

    param = lastNode.createStringParam("lebel", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("Fahad Hasan Pathik (CGVIRUS)")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.credit.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.lebel = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['control', 'credit', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "LightSweep_Stoy"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("LightSweep_Stoy")
    lastNode.setLabel("LightSweep_Stoy")
    lastNode.setPosition(1062, 16)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupLightSweep_Stoy = lastNode

    param = lastNode.getParam("mousePosition")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        del param

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(8.1, 0)
        del param

    param = lastNode.getParam("paramValueFloat1")
    if param is not None:
        param.setValue(22, 0)
        del param

    param = lastNode.getParam("paramValueFloat2")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat3")
    if param is not None:
        param.setValueAtTime(1, 1, 0)
        del param

    param = lastNode.getParam("paramValueFloat4")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramValueFloat5")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueFloat6")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueFloat7")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("paramValueInt8")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramValueFloat9")
    if param is not None:
        param.setValue(0.2, 0)
        del param

    param = lastNode.getParam("paramValueVec310")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        param.setValue(1, 2)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("/*\nImplementation and Development by CGVIRUS under GNU GPL Version 3 Licence.\n*/\n\n//Global parametres\nuniform float globalSize = 1.0; // Scale, min=0., max=100.\nuniform float globalRotate= 45.0; // Rotation, min=0., max=360.\nuniform float evolution = 1.0; // Evolution , min=1.0,max=360.\n\n\n//parametres\nuniform float tapperness = 1.; // Tapperness, min=.04., max=1.\nuniform float sizex = 5.0; // Scale X , min=0., max=10.\nuniform float sizey = 0.0; // Dual Light , min=-0, max=10.\nuniform float Thresold = 0.0; // Thresold, min=0., max=10.\nuniform float Hardness = 4.; // Hardness, min=.1, max=50.\nuniform int raycount = 5; // Anisotropic Count , min=0., max=100.\nuniform float raydepth = .2; // Anisotropic depth , min=-1.5, max=1.5\nuniform vec3 Color = vec3(1.,1.,1.); // Color\n\n\nconst float      PI = 3.14159265359;\nconst float  TWO_PI = 6.28318530718;\n\n//creates a adjustable Anamorphic spot\nfloat circleBox(vec2 uv, vec2 pos, vec2 size, float cornerRadius, float between)\n{\n    float rot = radians(globalRotate)*evolution;\n\tmat2 m = mat2(cos(rot), -sin(rot), sin(rot), cos(rot));\n   \tuv  = m*uv;\n   \tpos = m*pos;\n\t\n    vec2 main = uv-pos;\n\tfloat ang = atan(main.y, main.x);\n\tfloat dist=length(main); dist = pow(dist,.1);\n    \n\n    float sd = (length(uv-pos) - size.x); // circle\n    size -= vec2(cornerRadius);           // rounded box\n    vec2 d = (abs(uv-pos) - size);\n    float box = min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - cornerRadius;\n    float v = (1.0 - between)*sd + box*between;  //mix\n    \n    \n    float f0 = 1.0/((length(v))*(1.0/tapperness*Hardness*100))*globalSize;\n    return f0+f0*(sin((ang)*raycount)*raydepth+dist*.1+.9);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv -= 0.5;\n\tuv.x *= iResolution.x / iResolution.y;\n\t\n\tvec2 mouse = iMouse.xy/iResolution.xy;\n\tmouse -= 0.5;\n\tmouse.x *= iResolution.x / iResolution.y;\n\t\n    vec2 xy = fragCoord.xy / iResolution.xy;\n    vec4 linker = texture(iChannel0,xy);\n\t\n\t\n\tfloat c = circleBox(vec2((uv.x),(uv.y)), mouse, vec2(sizex,sizey)*globalSize, Thresold, tapperness);\n\t\n\tfragColor = vec4(vec3(c*Color), 1);\n}\n")
        del param

    param = lastNode.getParam("inputEnable0")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(11, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("globalSize")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Scale")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat0")
    if param is not None:
        param.setValue(99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("globalRotate")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Rotation")
        del param

    param = lastNode.getParam("paramDefaultFloat1")
    if param is not None:
        param.setValue(44.99999999999999, 0)
        del param

    param = lastNode.getParam("paramMinFloat1")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat1")
    if param is not None:
        param.setValue(359.9999999999999, 0)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("evolution")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Evolution")
        del param

    param = lastNode.getParam("paramDefaultFloat2")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat2")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMaxFloat2")
    if param is not None:
        param.setValue(359.9999999999999, 0)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("tapperness")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("Tapperness")
        del param

    param = lastNode.getParam("paramDefaultFloat3")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat3")
    if param is not None:
        param.setValue(0.04, 0)
        del param

    param = lastNode.getParam("paramMaxFloat3")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("sizex")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("Scale X")
        del param

    param = lastNode.getParam("paramDefaultFloat4")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramMinFloat4")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat4")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("sizey")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("Dual Light")
        del param

    param = lastNode.getParam("paramMinFloat5")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat5")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("Thresold")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("Thresold")
        del param

    param = lastNode.getParam("paramMinFloat6")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat6")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType7")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName7")
    if param is not None:
        param.setValue("Hardness")
        del param

    param = lastNode.getParam("paramLabel7")
    if param is not None:
        param.setValue("Hardness")
        del param

    param = lastNode.getParam("paramDefaultFloat7")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("paramMinFloat7")
    if param is not None:
        param.setValue(0.09999999999999999, 0)
        del param

    param = lastNode.getParam("paramMaxFloat7")
    if param is not None:
        param.setValue(49.99999999999999, 0)
        del param

    param = lastNode.getParam("paramType8")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName8")
    if param is not None:
        param.setValue("raycount")
        del param

    param = lastNode.getParam("paramLabel8")
    if param is not None:
        param.setValue("Anisotropic Count")
        del param

    param = lastNode.getParam("paramDefaultInt8")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramMinInt8")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxInt8")
    if param is not None:
        param.setValue(100, 0)
        del param

    param = lastNode.getParam("paramType9")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName9")
    if param is not None:
        param.setValue("raydepth")
        del param

    param = lastNode.getParam("paramLabel9")
    if param is not None:
        param.setValue("Anisotropic depth")
        del param

    param = lastNode.getParam("paramDefaultFloat9")
    if param is not None:
        param.setValue(0.2, 0)
        del param

    param = lastNode.getParam("paramMinFloat9")
    if param is not None:
        param.setValue(-1.5, 0)
        del param

    param = lastNode.getParam("paramMaxFloat9")
    if param is not None:
        param.setValue(1.5, 0)
        del param

    param = lastNode.getParam("paramType10")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName10")
    if param is not None:
        param.setValue("Color")
        del param

    param = lastNode.getParam("paramLabel10")
    if param is not None:
        param.setValue("Color")
        del param

    param = lastNode.getParam("paramDefaultVec310")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        param.setValue(1, 2)
        del param

    param = lastNode.getParam("paramType11")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName11")
    if param is not None:
        param.setValue("raycount")
        del param

    param = lastNode.getParam("paramLabel11")
    if param is not None:
        param.setValue("Ray Count")
        del param

    param = lastNode.getParam("paramType12")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName12")
    if param is not None:
        param.setValue("raydepth")
        del param

    param = lastNode.getParam("paramLabel12")
    if param is not None:
        param.setValue("Ray depth")
        del param

    param = lastNode.getParam("paramType13")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName13")
    if param is not None:
        param.setValue("Color")
        del param

    param = lastNode.getParam("paramLabel13")
    if param is not None:
        param.setValue("Color")
        del param

    del lastNode
    # End of node "LightSweep_Stoy"

    # Start of node "Merge1"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge1")
    lastNode.setLabel("Merge1")
    lastNode.setPosition(1064, 202)
    lastNode.setSize(104, 55)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge1 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("overlay")
        del param

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge1"

    # Start of node "Clamp1"
    lastNode = app.createNode("net.sf.openfx.Clamp", 2, group)
    lastNode.setScriptName("Clamp1")
    lastNode.setLabel("Clamp1")
    lastNode.setPosition(1062, 116)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.48, 0.66, 1)
    groupClamp1 = lastNode

    param = lastNode.getParam("minClampToEnable")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("maxClampToEnable")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("premult")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Clamp1"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output1")
    lastNode.setPosition(1064, 308)
    lastNode.setSize(104, 31)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "source"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("source")
    lastNode.setLabel("source")
    lastNode.setPosition(875, 132)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupsource = lastNode

    del lastNode
    # End of node "source"

    # Now that all nodes are created we can connect them together, restore expressions
    groupMerge1.connectInput(0, groupsource)
    groupMerge1.connectInput(1, groupClamp1)
    groupClamp1.connectInput(0, groupLightSweep_Stoy)
    groupOutput1.connectInput(0, groupMerge1)

    param = groupLightSweep_Stoy.getParam("mousePosition")
    group.getParam("MouseposXY").setAsAlias(param)
    del param
    param = groupLightSweep_Stoy.getParam("paramValueFloat0")
    group.getParam("Shadertoy1paramValueFloat0").setAsAlias(param)
    del param
    param = groupLightSweep_Stoy.getParam("paramValueFloat1")
    group.getParam("Shadertoy1paramValueFloat1").setAsAlias(param)
    del param
    param = groupLightSweep_Stoy.getParam("paramValueFloat2")
    group.getParam("Shadertoy1paramValueFloat2").setAsAlias(param)
    del param
    param = groupLightSweep_Stoy.getParam("paramValueFloat4")
    group.getParam("Shadertoy1paramValueFloat4").setAsAlias(param)
    del param
    param = groupLightSweep_Stoy.getParam("paramValueFloat5")
    group.getParam("Shadertoy1paramValueFloat5").setAsAlias(param)
    del param
    param = groupLightSweep_Stoy.getParam("paramValueFloat6")
    group.getParam("Shadertoy1paramValueFloat6").setAsAlias(param)
    del param
    param = groupLightSweep_Stoy.getParam("paramValueFloat7")
    group.getParam("Shadertoy1paramValueFloat7").setAsAlias(param)
    del param
    param = groupLightSweep_Stoy.getParam("paramValueInt8")
    group.getParam("Shadertoy1paramValueInt8").setAsAlias(param)
    del param
    param = groupLightSweep_Stoy.getParam("paramValueFloat9")
    group.getParam("Shadertoy1paramValueFloat9").setAsAlias(param)
    del param
    param = groupLightSweep_Stoy.getParam("paramValueVec310")
    group.getParam("Shadertoy1paramValueVec310").setAsAlias(param)
    del param
    param = groupMerge1.getParam("operation")
    group.getParam("Merge1operation").setAsAlias(param)
    del param

    try:
        extModule = sys.modules["Light_SweepExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
