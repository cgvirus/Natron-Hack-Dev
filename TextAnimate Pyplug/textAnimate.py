# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named textAnimateExt.py
# See http://natron.readthedocs.org/en/master/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from textAnimateExt import *
except ImportError:
    pass

def getPluginID():
    return "textanimate"

def getLabel():
    return "textAnimate"

def getVersion():
    return 1

def getIconPath():
    return "TextAnimateIcon.png"

def getGrouping():
    return "Draw"

def getPluginDescription():
    return "Text Animate is an enhancing pyplug for Natron TextOFX animation.\nAuthor: Fahad Hasan Pathik (CGVIRUS)"

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group

    # Create the user parameters
    lastNode.textparam = lastNode.createPageParam("textparam", "Text Settings")
    param = lastNode.createSeparatorParam("TexttransSep", "Text Transform")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.TexttransSep = param
    del param

    param = lastNode.createDouble2DParam("Text_Pangocenter", "Center")
    param.setDisplayMinimum(-10000, 0)
    param.setDisplayMaximum(10000, 0)
    param.setDefaultValue(0.5, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(-10000, 1)
    param.setDisplayMaximum(10000, 1)
    param.setDefaultValue(0.5, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(960, 0)
    param.setValue(540, 1)
    lastNode.Text_Pangocenter = param
    del param

    param = lastNode.createDoubleParam("Text_Pangorotate", "Rotate")
    param.setDisplayMinimum(-180, 0)
    param.setDisplayMaximum(180, 0)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_Pangorotate = param
    del param

    param = lastNode.createDouble2DParam("Text_Pangoscale", "Scale")
    param.setMinimum(-10000, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(0.1, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-10000, 1)
    param.setMaximum(10000, 1)
    param.setDisplayMinimum(0.1, 1)
    param.setDisplayMaximum(10, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_Pangoscale = param
    del param

    param = lastNode.createDoubleParam("Text_PangoskewX", "Skew X")
    param.setDisplayMinimum(-1, 0)
    param.setDisplayMaximum(1, 0)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangoskewX = param
    del param

    param = lastNode.createDoubleParam("Text_PangoskewY", "Skew Y")
    param.setDisplayMinimum(-1, 0)
    param.setDisplayMaximum(1, 0)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangoskewY = param
    del param

    param = lastNode.createChoiceParam("Text_PangoskewOrder", "Skew Order")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangoskewOrder = param
    del param

    param = lastNode.createDoubleParam("Text_PangotransformAmount", "Amount")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangotransformAmount = param
    del param

    param = lastNode.createBooleanParam("Text_Pangointeractive", "Interactive Update")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangointeractive = param
    del param

    param = lastNode.createBooleanParam("Text_Pangotransform", "Transform")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangotransform = param
    del param

    param = lastNode.createBooleanParam("Text_PangoautoSize", "Auto size")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Text_PangoautoSize = param
    del param

    param = lastNode.createBooleanParam("Text_PangocenterInteract", "Center Interact")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Text_PangocenterInteract = param
    del param

    param = lastNode.createInt2DParam("Text_Pangocanvas", "Canvas size")
    param.setMinimum(0, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(4000, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(0, 1)
    param.setMaximum(10000, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(4000, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangocanvas = param
    del param

    param = lastNode.createSeparatorParam("sepone", "")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sepone = param
    del param

    param = lastNode.createBooleanParam("Text_Pangomarkup", "Markup")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangomarkup = param
    del param

    param = lastNode.createStringParam("PangoEnginetxt", "Type Text")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeMultiLine)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("To Animate please: \n>enable Markup Above\n>Enable Animate Text from Animation settings\n\nFor Transform Gizmo:\n>You can hard-link a Tranform node to\nText Transorm Panel above\n>Link Tranfrom Node\'s Translate to\nTextAnimate\'s Center and others to others\n>Make that Tranform node\'s center 0,0")
    lastNode.PangoEnginetxt = param
    del param

    param = lastNode.createBooleanParam("Text_Pangojustify", "Justify")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangojustify = param
    del param

    param = lastNode.createChoiceParam("Text_Pangowrap", "Wrap")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangowrap = param
    del param

    param = lastNode.createChoiceParam("Text_Pangoalign", "Horizontal align")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangoalign = param
    del param

    param = lastNode.createChoiceParam("Text_Pangovalign", "Vertical align")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangovalign = param
    del param

    param = lastNode.createSeparatorParam("sepTwo", "")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sepTwo = param
    del param

    param = lastNode.createChoiceParam("Text_Pangoname", "Font family")
    param.setDefaultValue(20)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangoname = param
    del param

    param = lastNode.createFileParam("Text_Pangocustom", "Custom font")
    param.setSequenceEnabled(False)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangocustom = param
    del param

    param = lastNode.createIntParam("Text_Pangosize", "Font size")
    param.setMinimum(1, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(500, 0)
    param.setDefaultValue(64, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(32, 0)
    lastNode.Text_Pangosize = param
    del param

    param = lastNode.createColorParam("Text_Pangocolor", "Font color", True)
    param.setMinimum(-1.79769e+308, 0)
    param.setMaximum(1.79769e+308, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-1.79769e+308, 1)
    param.setMaximum(1.79769e+308, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(1, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)
    param.setMinimum(-1.79769e+308, 2)
    param.setMaximum(1.79769e+308, 2)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(1, 2)
    param.setDefaultValue(1, 2)
    param.restoreDefaultValue(2)
    param.setMinimum(-1.79769e+308, 3)
    param.setMaximum(1.79769e+308, 3)
    param.setDisplayMinimum(0, 3)
    param.setDisplayMaximum(1, 3)
    param.setDefaultValue(1, 3)
    param.restoreDefaultValue(3)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_Pangocolor = param
    del param

    param = lastNode.createColorParam("Text_PangobackgroundColor", "Background Color", True)
    param.setMinimum(-1.79769e+308, 0)
    param.setMaximum(1.79769e+308, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setMinimum(-1.79769e+308, 1)
    param.setMaximum(1.79769e+308, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(1, 1)
    param.setMinimum(-1.79769e+308, 2)
    param.setMaximum(1.79769e+308, 2)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(1, 2)
    param.setMinimum(-1.79769e+308, 3)
    param.setMaximum(1.79769e+308, 3)
    param.setDisplayMinimum(0, 3)
    param.setDisplayMaximum(1, 3)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangobackgroundColor = param
    del param

    param = lastNode.createIntParam("Text_PangoletterSpace", "Letter spacing")
    param.setMinimum(0, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(500, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangoletterSpace = param
    del param

    param = lastNode.createSeparatorParam("septhree", "")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.septhree = param
    del param

    param = lastNode.createChoiceParam("Text_PangohintStyle", "Hint style")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Text_PangohintStyle = param
    del param

    param = lastNode.createChoiceParam("Text_PangohintMetrics", "Hint metrics")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Text_PangohintMetrics = param
    del param

    param = lastNode.createChoiceParam("Text_Pangoantialiasing", "Antialiasing")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangoantialiasing = param
    del param

    param = lastNode.createChoiceParam("Text_Pangosubpixel", "Subpixel")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangosubpixel = param
    del param

    param = lastNode.createChoiceParam("Text_Pangostyle", "Style")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangostyle = param
    del param

    param = lastNode.createChoiceParam("Text_Pangoweight", "Weight")
    param.setDefaultValue(5)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangoweight = param
    del param

    param = lastNode.createChoiceParam("Text_Pangostretch", "Stretch")
    param.setDefaultValue(4)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangostretch = param
    del param

    param = lastNode.createSeparatorParam("sepfour", "")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sepfour = param
    del param

    param = lastNode.createDoubleParam("Text_PangostrokeSize", "Stroke size")
    param.setMinimum(0, 0)
    param.setMaximum(500, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangostrokeSize = param
    del param

    param = lastNode.createColorParam("Text_PangostrokeColor", "Stroke color", True)
    param.setMinimum(-1.79769e+308, 0)
    param.setMaximum(1.79769e+308, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-1.79769e+308, 1)
    param.setMaximum(1.79769e+308, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(1, 1)
    param.setMinimum(-1.79769e+308, 2)
    param.setMaximum(1.79769e+308, 2)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(1, 2)
    param.setMinimum(-1.79769e+308, 3)
    param.setMaximum(1.79769e+308, 3)
    param.setDisplayMinimum(0, 3)
    param.setDisplayMaximum(1, 3)
    param.setDefaultValue(1, 3)
    param.restoreDefaultValue(3)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangostrokeColor = param
    del param

    param = lastNode.createIntParam("Text_PangostrokeDash", "Stroke dash length")
    param.setMinimum(0, 0)
    param.setMaximum(100, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangostrokeDash = param
    del param

    param = lastNode.createDouble3DParam("Text_PangostrokeDashPattern", "Stroke dash pattern")
    param.setMinimum(-1.79769e+308, 0)
    param.setMaximum(1.79769e+308, 0)
    param.setDisplayMinimum(-1.79769e+308, 0)
    param.setDisplayMaximum(1.79769e+308, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-1.79769e+308, 1)
    param.setMaximum(1.79769e+308, 1)
    param.setDisplayMinimum(-1.79769e+308, 1)
    param.setDisplayMaximum(1.79769e+308, 1)
    param.setMinimum(-1.79769e+308, 2)
    param.setMaximum(1.79769e+308, 2)
    param.setDisplayMinimum(-1.79769e+308, 2)
    param.setDisplayMaximum(1.79769e+308, 2)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangostrokeDashPattern = param
    del param

    param = lastNode.createSeparatorParam("sepfive", "")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sepfive = param
    del param

    param = lastNode.createDoubleParam("Text_PangocircleRadius", "Circle radius")
    param.setMinimum(0, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1000, 0)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangocircleRadius = param
    del param

    param = lastNode.createIntParam("Text_PangocircleWords", "Circle Words")
    param.setMinimum(1, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(10, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangocircleWords = param
    del param

    param = lastNode.createDoubleParam("Text_PangoarcRadius", "Arc Radius")
    param.setMinimum(0, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1000, 0)
    param.setDefaultValue(100, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangoarcRadius = param
    del param

    param = lastNode.createDoubleParam("Text_PangoarcAngle", "Arc Angle")
    param.setMinimum(0, 0)
    param.setMaximum(360, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(360, 0)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangoarcAngle = param
    del param

    param = lastNode.createDoubleParam("Text_PangoscrollX", "Scroll X")
    param.setMinimum(-10000, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(-4000, 0)
    param.setDisplayMaximum(4000, 0)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangoscrollX = param
    del param

    param = lastNode.createDoubleParam("Text_PangoscrollY", "Scroll Y")
    param.setMinimum(-10000, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(-4000, 0)
    param.setDisplayMaximum(4000, 0)

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Text_PangoscrollY = param
    del param

    param = lastNode.createSeparatorParam("sepsix", "")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sepsix = param
    del param

    param = lastNode.createChoiceParam("Text_Pangochannels", "Output Layer")

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.Text_Pangochannels = param
    del param

    param = lastNode.createBooleanParam("Text_PangoprocessAllPlanes", "All Planes")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.textparam.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Text_PangoprocessAllPlanes = param
    del param

    lastNode.AnimSet = lastNode.createPageParam("AnimSet", "Animation Settings")
    param = lastNode.createBooleanParam("PangoEngineIFAnimate", "Animate Text")

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.PangoEngineIFAnimate = param
    del param

    param = lastNode.createDoubleParam("PangoEngineletterSpacing", "Letter Spacing")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(-1000, 0)
    param.setDisplayMaximum(1000, 0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.PangoEngineletterSpacing = param
    del param

    param = lastNode.createSeparatorParam("sepseven", "Per Character Adjustment")

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sepseven = param
    del param

    param = lastNode.createIntParam("PangoEnginea1rangestart", "Range Start")
    param.setMinimum(0, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2000, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6, 0)
    lastNode.PangoEnginea1rangestart = param
    del param

    param = lastNode.createIntParam("PangoEnginea1effectofset", "Effect offset")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3, 0)
    lastNode.PangoEnginea1effectofset = param
    del param

    param = lastNode.createDoubleParam("PangoEngineeffectRise", "Character Rise")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(-200, 0)
    param.setDisplayMaximum(200, 0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.PangoEngineeffectRise = param
    del param

    param = lastNode.createDoubleParam("PangoEngineeffectChspace", "Character Space")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(-500, 0)
    param.setDisplayMaximum(500, 0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.PangoEngineeffectChspace = param
    del param

    param = lastNode.createIntParam("PangoEngineCHSize", "Character Size")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.PangoEngineCHSize = param
    del param

    param = lastNode.createSeparatorParam("sepeight", "Cursor Blink")

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sepeight = param
    del param

    param = lastNode.createBooleanParam("PangoEnginecursorcheck", "Show Cursor")

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.PangoEnginecursorcheck = param
    del param

    param = lastNode.createChoiceParam("PangoEngineUniCodes", "Unicodes")
    param.setDefaultValue(3)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.PangoEngineUniCodes = param
    del param

    param = lastNode.createStringParam("PangoEngineMycursor", "TypeCursor")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("|")
    lastNode.PangoEngineMycursor = param
    del param

    param = lastNode.createIntParam("PangoEngineblinkSpeed", "Blink Speed High/Low")
    param.setDisplayMinimum(2, 0)
    param.setDisplayMaximum(12, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(2, 0)
    lastNode.PangoEngineblinkSpeed = param
    del param

    param = lastNode.createSeparatorParam("sepnine", "Randomize Character")

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sepnine = param
    del param

    param = lastNode.createBooleanParam("PangoEnginerandWholeTxt", "Randomize Whole Text")

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.PangoEnginerandWholeTxt = param
    del param

    param = lastNode.createBooleanParam("PangoEnginerandEffectText", "Randomize Only Effect Size")

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.PangoEnginerandEffectText = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['textparam', 'AnimSet', 'Settings', 'Node'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Text_Pango"
    lastNode = app.createNode("net.fxarena.openfx.Text", 6, group)
    lastNode.setScriptName("Text_Pango")
    lastNode.setLabel("Text_Pango")
    lastNode.setPosition(746, 310)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupText_Pango = lastNode

    param = lastNode.getParam("skewOrder")
    if param is not None:
        param.set("XY")
        del param

    param = lastNode.getParam("center")
    if param is not None:
        param.setValue(960, 0)
        param.setValue(540, 1)
        del param

    param = lastNode.getParam("markup")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("text")
    if param is not None:
        param.setValue("To Animate please: \n>enable Markup Above\n>Enable Animate Text from Animation settings\n\nFor Transform Gizmo:\n>You can hard-link a Tranform node to\nText Transorm Panel above\n>Link Tranfrom Node\'s Translate to\nTextAnimate\'s Center and others to others\n>Make that Tranform node\'s center 0,0")
        del param

    param = lastNode.getParam("wrap")
    if param is not None:
        param.set("None")
        del param

    param = lastNode.getParam("align")
    if param is not None:
        param.set("Left")
        del param

    param = lastNode.getParam("valign")
    if param is not None:
        param.set("Top")
        del param

    param = lastNode.getParam("font")
    if param is not None:
        param.setValue("A/Arial")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(32, 0)
        del param

    param = lastNode.getParam("hintStyle")
    if param is not None:
        param.set("Default")
        del param

    param = lastNode.getParam("hintMetrics")
    if param is not None:
        param.set("Default")
        del param

    param = lastNode.getParam("antialiasing")
    if param is not None:
        param.set("Default")
        del param

    param = lastNode.getParam("subpixel")
    if param is not None:
        param.set("Default")
        del param

    param = lastNode.getParam("style")
    if param is not None:
        param.set("Normal")
        del param

    del lastNode
    # End of node "Text_Pango"

    # Start of node "source"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("source")
    lastNode.setLabel("source")
    lastNode.setPosition(746, 205)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupsource = lastNode

    del lastNode
    # End of node "source"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output1")
    lastNode.setPosition(748, 436)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "PangoEngine"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("PangoEngine")
    lastNode.setLabel("PangoEngine")
    lastNode.setPosition(881, 312)
    lastNode.setSize(104, 43)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupPangoEngine = lastNode

    param = lastNode.getParam("optional")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("isMask")
    if param is not None:
        param.setValue(True)
        del param


    # Create the user parameters
    lastNode.AnimSet = lastNode.createPageParam("AnimSet", "Animation Settings")
    param = lastNode.createBooleanParam("IFAnimate", "Animate Text")

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(False)
    param.setEnabled(False, 0)
    lastNode.IFAnimate = param
    del param

    param = lastNode.createStringParam("txt", "Type Text")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeMultiLine)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("To Animate please: \n>enable Markup Above\n>Enable Animate Text from Animation settings\n\nFor Transform Gizmo:\n>You can hard-link a Tranform node to\nText Transorm Panel above\n>Link Tranfrom Node\'s Translate to\nTextAnimate\'s Center and others to others\n>Make that Tranform node\'s center 0,0")
    param.setEnabled(False, 0)
    lastNode.txt = param
    del param

    param = lastNode.createStringParam("TexttoLink", "Text to Link")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeMultiLine)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("To Animate please: \n>enable Markup Above\n>Enable Animate Text from Animation settings\n\nFor Transform Gizmo:\n>You can hard-link a Tranform node to\nText Transorm Panel above\n>Link Tranfrom Node\'s Translate to\nTextAnimate\'s Center and others to others\n>Make that Tranform node\'s center 0,0")
    lastNode.TexttoLink = param
    del param

    param = lastNode.createDoubleParam("letterSpacing", "Letter Spacing")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(-200, 0)
    param.setDisplayMaximum(200, 0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setEnabled(False, 0)
    lastNode.letterSpacing = param
    del param

    param = lastNode.createSeparatorParam("sep", "Per Character Adjustment")

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep = param
    del param

    param = lastNode.createIntParam("a1rangestart", "Range Start")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2000, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(6, 0)
    param.setEnabled(False, 0)
    lastNode.a1rangestart = param
    del param

    param = lastNode.createIntParam("a1rangeend", "Range End")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2000, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(9, 0)
    lastNode.a1rangeend = param
    del param

    param = lastNode.createIntParam("a1effectofset", "Effect offset")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(3, 0)
    param.setEnabled(False, 0)
    lastNode.a1effectofset = param
    del param

    param = lastNode.createDoubleParam("effectRise", "Character Rise")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(-200, 0)
    param.setDisplayMaximum(200, 0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setEnabled(False, 0)
    lastNode.effectRise = param
    del param

    param = lastNode.createDoubleParam("effectChspace", "Character Space")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(-500, 0)
    param.setDisplayMaximum(500, 0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setEnabled(False, 0)
    lastNode.effectChspace = param
    del param

    param = lastNode.createDoubleParam("effectSize", "Character Size link")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(10, 0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(32, 0)
    lastNode.effectSize = param
    del param

    param = lastNode.createIntParam("CHSize", "Character Size")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setEnabled(False, 0)
    lastNode.CHSize = param
    del param

    param = lastNode.createSeparatorParam("cursorsep", "Cursor Blink")

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.cursorsep = param
    del param

    param = lastNode.createBooleanParam("cursorcheck", "Show Cursor")

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(True)
    param.setEnabled(False, 0)
    lastNode.cursorcheck = param
    del param

    param = lastNode.createChoiceParam("UniCodes", "Unicodes")
    entries = [ ("TypeCursor", ""),
    ("▮", ""),
    ("▯", ""),
    ("❚", ""),
    ("⌶", ""),
    ("❙", ""),
    ("◄", ""),
    ("►", ""),
    ("⬅", ""),
    ("➡", "")]
    param.setOptions(entries)
    del entries
    param.setDefaultValue("❚")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("More unicode: https://en.wikibooks.org/wiki/Unicode/List_of_useful_symbols")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.set("❚")
    param.setEnabled(False, 0)
    lastNode.UniCodes = param
    del param

    param = lastNode.createStringParam("myCursorScript", "curScript")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("❚")
    lastNode.myCursorScript = param
    del param

    param = lastNode.createStringParam("Mycursor", "TypeCursor")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("|")
    param.setEnabled(False, 0)
    lastNode.Mycursor = param
    del param

    param = lastNode.createIntParam("blinkSpeed", "Blink Speed High/Low")
    param.setDisplayMinimum(2, 0)
    param.setDisplayMaximum(12, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(2, 0)
    param.setEnabled(False, 0)
    lastNode.blinkSpeed = param
    del param

    param = lastNode.createSeparatorParam("randlb", "Randomize Character")

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.randlb = param
    del param

    param = lastNode.createBooleanParam("randWholeTxt", "Randomize Whole Text")

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setEnabled(False, 0)
    lastNode.randWholeTxt = param
    del param

    param = lastNode.createBooleanParam("randEffectText", "Randomize Only Effect Size")

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setEnabled(False, 0)
    lastNode.randEffectText = param
    del param

    param = lastNode.createStringParam("randch", "Random Character")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeMultiLine)

    # Add the param to the page
    lastNode.AnimSet.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("")
    lastNode.randch = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['AnimSet', 'controls', 'Node', 'Info'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "PangoEngine"

    # Now that all nodes are created we can connect them together, restore expressions
    groupText_Pango.connectInput(0, groupsource)
    groupOutput1.connectInput(0, groupText_Pango)

    param = groupText_Pango.getParam("rotate")
    group.getParam("Text_Pangorotate").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("scale")
    group.getParam("Text_Pangoscale").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("skewX")
    group.getParam("Text_PangoskewX").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("skewY")
    group.getParam("Text_PangoskewY").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("skewOrder")
    group.getParam("Text_PangoskewOrder").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("transformAmount")
    group.getParam("Text_PangotransformAmount").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("center")
    group.getParam("Text_Pangocenter").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("interactive")
    group.getParam("Text_Pangointeractive").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("transform")
    group.getParam("Text_Pangotransform").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("autoSize")
    group.getParam("Text_PangoautoSize").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("centerInteract")
    group.getParam("Text_PangocenterInteract").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("canvas")
    group.getParam("Text_Pangocanvas").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("markup")
    group.getParam("Text_Pangomarkup").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("text")
    param.setExpression("thisGroup.PangoEngine.TexttoLink.get()", False, 0)
    del param
    param = groupText_Pango.getParam("justify")
    group.getParam("Text_Pangojustify").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("wrap")
    group.getParam("Text_Pangowrap").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("align")
    group.getParam("Text_Pangoalign").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("valign")
    group.getParam("Text_Pangovalign").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("name")
    group.getParam("Text_Pangoname").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("custom")
    group.getParam("Text_Pangocustom").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("size")
    group.getParam("Text_Pangosize").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("color")
    group.getParam("Text_Pangocolor").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("backgroundColor")
    group.getParam("Text_PangobackgroundColor").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("letterSpace")
    group.getParam("Text_PangoletterSpace").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("hintStyle")
    group.getParam("Text_PangohintStyle").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("hintMetrics")
    group.getParam("Text_PangohintMetrics").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("antialiasing")
    group.getParam("Text_Pangoantialiasing").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("subpixel")
    group.getParam("Text_Pangosubpixel").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("style")
    group.getParam("Text_Pangostyle").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("weight")
    group.getParam("Text_Pangoweight").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("stretch")
    group.getParam("Text_Pangostretch").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("strokeSize")
    group.getParam("Text_PangostrokeSize").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("strokeColor")
    group.getParam("Text_PangostrokeColor").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("strokeDash")
    group.getParam("Text_PangostrokeDash").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("strokeDashPattern")
    group.getParam("Text_PangostrokeDashPattern").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("circleRadius")
    group.getParam("Text_PangocircleRadius").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("circleWords")
    group.getParam("Text_PangocircleWords").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("arcRadius")
    group.getParam("Text_PangoarcRadius").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("arcAngle")
    group.getParam("Text_PangoarcAngle").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("scrollX")
    group.getParam("Text_PangoscrollX").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("scrollY")
    group.getParam("Text_PangoscrollY").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("channels")
    group.getParam("Text_Pangochannels").setAsAlias(param)
    del param
    param = groupText_Pango.getParam("processAllPlanes")
    group.getParam("Text_PangoprocessAllPlanes").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("IFAnimate")
    group.getParam("PangoEngineIFAnimate").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("txt")
    group.getParam("PangoEnginetxt").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("TexttoLink")
    param.setExpression("mytext = thisNode.txt.get()\nranch = thisNode.randch.get()\nrandwholetxt = thisNode.randch.get()\nlow = thisNode.a1rangestart.get()\nhigh = thisNode.a1rangeend.get()\nprevioustxt = mytext[0:low]\nuRange = mytext[low:high]\neffectSpace = str(int(thisNode.letterSpacing.get()*100))\npangattSpace = \"letter_spacing\"\neffectRise = str(int(thisNode.effectRise.get()*100))\npangattRise = \"rise\"\neffectChspace = str(int(thisNode.effectChspace.get()*100))\npangattChspace = \"letter_spacing\"\neffectFsize = str( int ( thisNode.effectSize.get() ) )\npangattFsize = \"font\"\ncursor = thisNode.myCursorScript.get()\nout = \"<span %s= \'%s\'>%s<span %s= \'%s\' %s= \'%s\' %s= \'%s\'>%s%s</span></span>%s\"%(pangattSpace,effectSpace,previoustxt,pangattRise,effectRise,pangattChspace,effectChspace,pangattFsize,effectFsize,uRange,ranch,cursor)\nif thisNode.IFAnimate.get() == True:\n\tif thisNode.randWholeTxt.get() == True:\n\t\tret= randwholetxt\n\telse:\n\t\tret= out\nelse:\n\tret= mytext", True, 0)
    del param
    param = groupPangoEngine.getParam("letterSpacing")
    group.getParam("PangoEngineletterSpacing").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("a1rangestart")
    group.getParam("PangoEnginea1rangestart").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("a1rangeend")
    param.setExpression("if thisNode.a1rangestart.get() == 0:\n\tret= 0\nelse:\n\tret= thisNode.a1rangestart.get() + thisNode.a1effectofset.get()", True, 0)
    del param
    param = groupPangoEngine.getParam("a1effectofset")
    group.getParam("PangoEnginea1effectofset").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("effectRise")
    group.getParam("PangoEngineeffectRise").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("effectChspace")
    group.getParam("PangoEngineeffectChspace").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("effectSize")
    param.setExpression("thisGroup.Text_Pango.size.get()+thisNode.CHSize.get()", False, 0)
    del param
    param = groupPangoEngine.getParam("CHSize")
    group.getParam("PangoEngineCHSize").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("cursorcheck")
    group.getParam("PangoEnginecursorcheck").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("UniCodes")
    group.getParam("PangoEngineUniCodes").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("myCursorScript")
    param.setExpression("if thisNode.UniCodes.get() == 1:\n\tmycursor =\"▮\"\nelif thisNode.UniCodes.get() == 2:\n\tmycursor = \"▯\"\nelif thisNode.UniCodes.get() == 3:\n\tmycursor = \"❚\"\nelif thisNode.UniCodes.get() == 4:\n\tmycursor = \"⌶\"\nelif thisNode.UniCodes.get() == 5:\n\tmycursor = \"❙\"\nelif thisNode.UniCodes.get() == 6:\n\tmycursor = \"◄\"\nelif thisNode.UniCodes.get() == 7:\n\tmycursor = \"►\"\nelif thisNode.UniCodes.get() == 8:\n\tmycursor = \"⬅\"\nelif thisNode.UniCodes.get() == 9:\n\tmycursor = \"➡\"\nelse:\n\tmycursor = thisNode.Mycursor.get()\nspeed = thisNode.blinkSpeed.get()\nif thisNode.cursorcheck.get() == True:\n\tif frame%speed == 1:\n\t\tret= mycursor\n\telse:\n\t\tret= \"\"\nelse:\n\tret= \"\"", True, 0)
    del param
    param = groupPangoEngine.getParam("Mycursor")
    group.getParam("PangoEngineMycursor").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("blinkSpeed")
    group.getParam("PangoEngineblinkSpeed").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("randWholeTxt")
    group.getParam("PangoEnginerandWholeTxt").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("randEffectText")
    group.getParam("PangoEnginerandEffectText").setAsAlias(param)
    del param
    param = groupPangoEngine.getParam("randch")
    param.setExpression("import random\nimport string\nstart = thisNode.a1rangestart.get()\nend = thisNode.a1rangeend.get()\neffoff = thisNode.a1effectofset.get()\ntxt = thisNode.txt.get()\nwh = set(string.whitespace)\nch = \'\'.join(x for x in txt if x not in wh)\nl = list(txt)\nrandom.shuffle(l)\nresult = \'\'.join(l)\no = list(ch)\nrandom.shuffle(o)\nresultch = \'\'.join(o)\noffsetch = resultch[start:end]\ncheck = \"Please Check only one Randomize option\"\nif  thisNode.randWholeTxt.get() == True and thisNode.randEffectText.get() == True:\n\tret= check\nelif thisNode.randWholeTxt.get() == True:\n\tret= result\nelif thisNode.randEffectText.get() == True:\n\tret= offsetch\nelse:\n\tret= \"\"", True, 0)
    del param

    try:
        extModule = sys.modules["textAnimateExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
